{"version":3,"sources":["components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","users","setUsers","usersToDisplay","setUsersToDisplay","sortDirection","setSortDirection","searchTerm","setSearchTerm","useEffect","axios","get","then","response","data","results","sortByNameAsc","sortedUsers","sort","a","b","aValue","name","first","bValue","console","log","sortByNameDesc","className","style","marginTop","onSubmit","e","preventDefault","filteredUsers","filter","user","phone","includes","type","placeholder","value","onChange","target","onClick","textAlign","scope","map","index","id","src","picture","thumbnail","alt","last","email","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7edd17f7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Table = () => {\n  const [users, setUsers] = useState([]);\n  const [usersToDisplay, setUsersToDisplay] = useState([]);\n  const [sortDirection, setSortDirection] = useState([\"asc\"]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api/?results=50\").then((response) => {\n      setUsersToDisplay(response.data.results);\n      setUsers(response.data.results);\n    });\n    //  an empty dependency array inside useEffect mimics componentDidMount with out this it will call an infinite number of times.\n  }, []);\n  // this handles the filtering by phone number once the submit button is click.\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const filteredUsers = users.filter((user) => {\n      return user.phone.includes(searchTerm);\n    });\n\n    setUsersToDisplay(filteredUsers);\n  };\n  // this handles the resetting the results from the filtered list to the original api call.\n  const handleReset = () => {\n    setUsersToDisplay(users);\n  };\n\n  // this is the default sort function. It calls sortByNameAsc or sortByNameDesc depending on the current state.\n  const sortByName = () => {\n    if (sortDirection === \"asc\") {\n      sortByNameAsc();\n      setSortDirection(\"desc\");\n    } else {\n      sortByNameDesc();\n      setSortDirection(\"asc\");\n    }\n  };\n  // this sorts the list by ascending order when you click on the name.\n  const sortByNameAsc = () => {\n    const tempUsers = [...users];\n    const sortedUsers = tempUsers.sort((a, b) => {\n      const aValue = a.name.first;\n      const bValue = b.name.first;\n      if (aValue > bValue) {\n        return -1;\n      }\n      if (aValue < bValue) {\n        return 1;\n      }\n      return 0;\n    });\n    console.log(sortedUsers);\n    setUsersToDisplay(sortedUsers);\n  };\n  // this sorts the list by descending order if the order is already ascending.\n  const sortByNameDesc = () => {\n    const tempUsers = [...users];\n    const sortedUsers = tempUsers.sort((a, b) => {\n      const aValue = a.name.first;\n      const bValue = b.name.first;\n      if (aValue < bValue) {\n        return -1;\n      }\n      if (aValue > bValue) {\n        return 1;\n      }\n      return 0;\n    });\n    console.log(sortedUsers);\n    setUsersToDisplay(sortedUsers);\n  };\n  // here we return the form field, buttons, and table.\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\" style={{marginTop: 10}}>\n            <form onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"Enter phone number to filter\"\n                name=\"searchTerm\"\n                value={searchTerm}\n                onChange={(e) => {\n                  setSearchTerm(e.target.value);\n                }}\n              ></input>\n              <button className=\"btn btn-primary\">Filter</button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={handleReset}\n                type=\"button\"\n              >\n                Reset\n              </button>\n            </form>\n          </div>\n          <div className=\"col\">\n            <h1 style={{ textAlign: \"right\" }}>Employee Directory</h1>\n          </div>\n        </div>\n      </div>\n      <div>\n        <table className=\"table table-striped table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Photo</th>\n              <th scope=\"col\" onClick={sortByName}>\n                Name\n              </th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n          </thead>\n          <tbody>\n            {usersToDisplay.map((user, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{user.id.value}</th>\n                <td>\n                  <img src={user.picture.thumbnail} alt={user.name.first}></img>\n                </td>\n                <td>\n                  {user.name.first} {user.name.last}\n                </td>\n                <td>{user.email}</td>\n                <td>{user.phone}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n// we export the component so we can import into app.js.\nexport default Table;\n","import Table from \"./components/Table/Table\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n        <Table />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}